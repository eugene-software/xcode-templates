//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file is generated by custom SKELETON Xcode template.
//

import Foundation
import PromiseKit
import Alamofire


extension ReachabilityServiceInjected {
    
    public var reachabilityService: ReachabilityServiceProtocol {
        return Services.reachability
    }
}

class ReachabilityService: ReachabilityServiceProtocol, UserServiceInjected {
    
    //Public Properties
    //
    var isReachable: Bool { return manager?.isReachable == true }
    
    //Private Properties
    //
    private let manager = NetworkReachabilityManager()
    private var listeners = NSPointerArray.weakObjects()
    
    init() {
        
        manager?.startListening(onUpdatePerforming: { status in
            self.isReachable ? self.notifyNetworkAvailable() : self.notifyNetworkUnavailable()
        })
    }
    
    func addListener(_ listener: ReachabilityServiceListener) {
        listeners.addObject(listener)
        listeners.compact()
    }
}


//MARK: - Reachability helpers
//
private extension ReachabilityService {
    
    func notifyNetworkAvailable() {
        
        for i in 0..<listeners.allObjects.count {
            let listener = listeners.object(at: i) as? ReachabilityServiceListener
            listener?.networkAvailabile()
        }
    }
    
    func notifyNetworkUnavailable() {
        
        for i in 0..<listeners.allObjects.count {
            let listener = listeners.object(at: i) as? ReachabilityServiceListener
            listener?.networkUnavailable()
        }
    }
}
