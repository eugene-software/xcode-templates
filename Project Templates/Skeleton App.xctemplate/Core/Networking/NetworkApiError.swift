//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file is generated by custom SKELETON Xcode template.
//

import Foundation
import Moya
import Alamofire


public enum NetworkApiError: Error {
    
    /// Indicates a failure to map data to a Decodable object. Use `qaDescription` for debugging only; not suitable for production.
    ///
    case decoding(qaDescription: String?)
    
    /// Indicates a response failed with an invalid HTTP status code
    ///
    case apiStatusCode(Int, Response)
    
    /// Internal error of network connection
    ///
    case internalStatusCode(code: Int)
    
    /// Indicates a failure to connect to the network or to receive any response
    ///
    case networkFailure
    
    /// Indicates a failure due to some other unknown error
    ///
    case unknown
    
    public init(_ error: Error) {

        guard let moyaError = error as? MoyaError else {
            self = .unknown
            return
        }

        switch moyaError {

        case .objectMapping,
             .jsonMapping:
            self = .decoding(qaDescription: "\(error)")

        case .statusCode(let response):
            self = .apiStatusCode(response.statusCode, response)

        case .underlying(let err, _):

            if let code = (err as? Alamofire.AFError)?.underlyingError?._code {
                self = code == NSURLErrorNotConnectedToInternet ? .networkFailure : .internalStatusCode(code: code)
            } else {
                self = .unknown
            }

        default:
            self = .unknown
        }
    }
}
