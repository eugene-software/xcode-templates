//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file is generated by custom SKELETON Xcode template.
//

import Foundation
import PromiseKit

protocol DatabaseWriterProtocol {
    
    associatedtype WriteType: Codable
    
    /// Efficiently removes all objects by entity name from the database.
    ///
    /// - Parameters:
    ///   - entity: Object type to be deleted from database
    ///   - predicate: predicate for searching existing object and delete it
    /// - Returns: An empty promise when the work is finished
    ///
    @discardableResult
    static func deleteEntities(_ entity: WriteType.Type, predicate: NSPredicate?) -> Promise<Void>
    
    /// Efficiently saves Updatable object list to the database.
    ///
    /// - Parameters:
    ///   - objectsToImport: Objects to be imported to database
    /// - Returns: An empty promise when the work is finished
    ///
    @discardableResult
    static func importRemoteList(_ objectsToImport: [WriteType]) -> Promise<Void>
}


class AppDatabaseImporter<ImportedType: Codable> {}

extension AppDatabaseImporter: DatabaseWriterProtocol where ImportedType: CoreDataCompatible {
    
    typealias Writer = CoreDataWriter
    typealias WriteType = ImportedType
    
    @discardableResult
    static func deleteEntities(_ entity: WriteType.Type, predicate: NSPredicate?) -> Promise<Void> {
        return Writer<WriteType>.deleteEntities(entity, predicate: predicate)
    }
    
    @discardableResult
    static func importRemoteList(_ objectsToImport: [WriteType]) -> Promise<Void> {
        return Writer<WriteType>.importRemoteList(objectsToImport)
    }
}

